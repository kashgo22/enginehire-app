@use "sass:string";


:host(.button-full:not(.button-round)) .button-native {
  border-radius: inherit !important;
}
ion-title {
  position: relative; 
}
ion-row {
  width: 100%;
  display: block;
}
/* utility classes*/
.text {
  &-default {
    font-size: 1rem;
  }
  &-h1 {
    font-size: 2.5rem; // 40px
  }
  &-h2 {
    font-size: 1.375rem; //22px
  }
  &-h3 {
    font-size: 1.125rem; //18px
  }
  &-h4 {
    font-size: 0.875rem; //14px
  }
  &-caption {
    font-size: 0.75rem; //12px
  }
}

.link {
  text-decoration: none;
  color: var(--ion-color-primary);
  &-normal {
    text-decoration: underline;
  }
}
.h-full {
  height: 100%;
}
.w-full {
  width: 100% !important;
}

// TW Classes
$sizes: (
  auto: auto,
  0: 0px,
  2: 0.125rem,
  3: 0.1875rem,
  4: 0.25rem,
  5: 0.313rem,
  6: 0.375rem,
  7: 0.45rem,
  8: 0.5rem,
  10: 0.625rem,
  12: 0.75rem,
  14: 0.875rem,
  16: 1rem,
  17: 1.0625rem,
  18: 1.125rem,
  19: 1.1875rem,
  20: 1.25rem,
  22: 1.375rem,
  23: 1.4375rem,
  24: 1.5rem,
  26: 1.625rem,
  28: 1.75rem,
  30: 1.875rem,
  32: 2rem,
  33: 2.0625rem,
  34: 2.125rem,
  36: 2.25rem,
  38: 2.375rem,
  40: 2.5rem,
  46: 2.875rem,
  50: 3.125rem,
  56: 3.5rem,
  60: 3.75rem,
  64: 4rem,
  70: 4.375rem,
  76: 4.75rem,
  80: 5rem,
  96: 6rem,
  100: 6.25rem,
  140: 8.75rem,
  250: 15.625rem,
);

@each $name, $value in $sizes {
  .p-#{$name} {
    padding: #{$value};
  }
  .pt-#{$name} {
    padding-top: #{$value};
  }
  .pr-#{$name} {
    padding-right: #{$value};
  }
  .pb-#{$name} {
    padding-bottom: #{$value};
    --padding-bottom: #{$value} !important;
  }--ion-color-secondary
  .pl-#{$name} {
    padding-left: #{$value};display: flex;
    align-items: center;
    justify-content: center;
    padding: 20px;
  }
  .px-#{$name} {
    padding-left: #{$value};
    padding-right: #{$value};
  }
  .py-#{$name} {
    padding-top: #{$value};
    padding-bottom: #{$value};
  }
  .m-#{$name} {
    margin: #{$value};
  }
  .mt-#{$name} {
    margin-top: #{$value};
  }
  .mr-#{$name} {
    margin-right: #{$value};
  }
  .mb-#{$name} {
    margin-bottom: #{$value};
  }
  .ml-#{$name} {
    margin-left: #{$value};
  }
  .-ml-#{$name} {
    margin-left: -#{$value};
  }
  .mx-#{$name} {
    margin-left: #{$value};
    margin-right: #{$value};
  }
  .my-#{$name} {
    margin-top: #{$value};
    margin-bottom: #{$value};
  }
  // Custom font-size 
  .fs-#{$name} {
    font-size: #{$value};
  }
  // Flex & Grid Gap 
  .gap-#{$name} {
    gap: #{$value};
  }
}

$colors: (
  primary: var(--ion-color-primary),
  secondary: var(--ion-color-secondary),
  tertiary: var(--ion-color-tertiary),
  light: var(--ion-color-white)
);

@each $name, $value in $colors {
  .bg-#{$name} {
    background-color: #{$value};
  }
  .text-#{$name} {
    color: #{$value};
  }
  .content-bg-#{$name} {
    --ion-background-color: #{$value};
  }
}
.cursor-pointer {
  cursor: pointer;
}
$textAlign: (
  left left,
  center center,
  right right,
  justify justify,
);

@each $name, $value in $textAlign {
  .text-#{$name} {
    text-align: #{$value};
  }
}
$borderRadiusSizes: (
  none: none,
  5: 5px,
  7: 7px,
  full: '9999px'
);


@each $name, $value in $borderRadiusSizes {
  .rounded-#{$name} {
    border-radius: #{$value};
    --border-radius:  #{$value};
  }
}

$textSizes: (
  'xs' 0.75rem 1rem, /* 12px */
  'sm' 0.875rem 1.25rem, /* 13px */
  'base' 1rem 1.5rem, /* 16px */
  'lg' 1.125rem 1.75rem, /* 18px */
  'xl' 1.25rem 1.75rem, /* 20px */
  '2xl' 1.5rem 2rem, /* 24px */
  '3xl' 1.875rem 2.25rem, /* 30px */
  '4xl' 2.25rem 2.5rem, /* 36px */
  '5xl' 3rem 1, /* 48px */
  '6xl' 3.75rem 1, /* 60px */
  '7xl' 4.5rem 1, /* 72px */
  '8xl' 6rem 1, /* 96px */
  '9xl' 8rem 1, /* 128px */
);

@each $name, $size, $lineHeight in $textSizes {
  .text {
    &-#{$name} {
      font-size: #{$size};
      line-height: #{$lineHeight};
    }
  }
}


$shadows: (
'default' '0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)',
'custom' '0 .5rem 1rem rgba(0,0,0,0.15)'
'sm' '0 1px 2px 0 rgb(0 0 0 / 0.05)',
'md' '0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)',
'lg' '0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)',
'xl' '0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)',
'2xl' '0 25px 50px -12px rgb(0 0 0 / 0.25)',
'inner' 'inset 0 2px 4px 0 rgb(0 0 0 / 0.05)',
'none' none,
);

@each $name, $value in $shadows {
  .shadow {
      @if $name == 'default' {
        box-shadow: string.unquote($value);
      } 
      @else {
      &-#{$name} {
        box-shadow: string.unquote($value);
      }
      &-#{$name}-hover:hover {
        box-shadow: string.unquote($value);
      }
    }
  }
}

$fontweights : (
  thin	100,
  extralight 200,
  light	300,
  normal	400,
  medium	500,
  semibold	600,
  bold	700,
  extrabold	800,
  black	900,
);

@each $name, $value in $fontweights {
  .font-#{""+$name} {
    font-weight: #{$value};
  }
}

.border {
  border: 1px solid var(--ion-color-primary) !important;
}
.font-quicksand, body, html {
  font-family: 'Quicksand', sans-serif;
}
.uppercase {
  text-transform: uppercase;
}
.normal-case {
  text-transform: none;
}
.underline {
  text-decoration: underline;
}

.input-fields ion-item.item-has-focus > ion-label{
  color: var(--ion-color-secondary) !important;
}

$sizess: (
'0' :	0px,  /* 0px */
'px' : 1px,  /* 1px */
'0.5' : 0.125rem, /* 2px */
'1' :.25rem, /* 4px */
'1.5' : 0.375rem, /* 6px */
'2' : 0.5rem, /* 8px */
'2.5' : 0.625rem, /* 10px */
'3' : 0.75rem, /* 12px */
'3.5' : 0.875rem, /* 14px */
'4' : 1rem, /* 16px */
'5' : 1.25rem, /* 20px */
'6' : 1.5rem, /* 24px */
'7' : 1.75rem, /* 28px */
'8' : 2rem, /* 32px */
'9' : 2.25rem, /* 36px */
'10' : 2.5rem, /* 40px */
'11' : 2.75rem, /* 44px */
'12' : 3rem, /* 48px */
'14' : 3.5rem, /* 56px */
'16' : 4rem, /* 64px */
'20' : 5rem, /* 80px */
'24' : 6rem, /* 96px */
'28' : 7rem, /* 112px */
'32' : 8rem, /* 128px */
'36' : 9rem, /* 144px */
'40' : 10rem, /* 160px */
'44' : 11rem, /* 176px */
'48' : 12rem, /* 192px */
'52' : 13rem, /* 208px */
'56' : 14rem, /* 224px */
'60' : 15rem, /* 240px */
'64' : 16rem, /* 256px */
'72' : 18rem, /* 288px */
'80' : 20rem, /* 320px */
'96' : 24rem, /* 384px */
'auto' : 'auto',
'1/2' : 50%,
'1/3' : 33.333333%,
'2/3' : 66.666667%,
'1/4' : 25%,
'2/4' : 50%,
'3/4' : 75%,
'1/5' : 20%,
'2/5' : 40%,
'3/5' : 60%,
'4/5' : 80%,
'1/6' : 16.666667%,
'2/6' : 33.333333%,
'3/6' : 50%,
'4/6' : 66.666667%,
'5/6' : 83.333333%,
'1/12' : 8.333333%,
'2/12' : 16.666667%,
'3/12' : 25%,
'4/12' : 33.333333%,
'5/12' : 41.666667%,
'6/12' : 50%,
'7/12' : 58.333333%,
'8/12' : 66.666667%,
'9/12' : 75%,
'10/12' : 83.333333%,
'11/12' : 91.666667%,
'full' : 100%,
'screen' : 100vw,
'min' : 'min-content',
'max' : 'max-content',
'fit' : 'fit-content',
);

// @each $name, $value in $sizess {
//   .w-#{$name} {
//     width: #{$value};
//   }
// }

$display: (
  inline inline,
  block block,
  flex flex,
  inline-flex inline-flex,
  grid grid,
  hidden none
);

@each $name, $value in $display {
  .#{$name} {
    display: #{$value} !important;
  }
}

// FlexBox 

.flex {
  &-col {
    flex-direction: column;
  }
  &-grow {
    flex-grow: 1;
  }
  &-grow-0 {
    flex-grow: 0;
  }
  &-shrink {
    flex-shrink: 1;
  }
  &-shrink-0 {
    flex-shrink: 0;
  }
  &-wrap {
    flex-wrap: wrap;
  }
  &-wrap-reverse {
    flex-wrap: wrap-reverse;
  }
  &-nowrap {
    flex-wrap: nowrap;
  }
  &-1 {
    flex: 1;
  }
}
$alignItems: (
  start	flex-start,
  end	flex-end,
  center center,
  baseline baseline,
  stretch stretch,
);
@each $name, $value in $alignItems {
  .items-#{$name} {
    align-items: #{$value} !important;
  }
}
$alignContent: (
  center	center,
  start	flex-start,
  end flex-end,
  between space-between,
  around space-around,
  evenly space-evenly
);
@each $name, $value in $alignContent {
  .items-#{$name} {
    align-content: #{$value} !important;
  }
}
$JustifyContent: (
  start flex-start,
  end flex-end,
  center center,
  between space-between,
  around space-around,
  evenly space-evenly,
);
@each $name, $value in $JustifyContent {
  .justify-#{$name} {
    justify-content: #{$value} !important;
  }
}